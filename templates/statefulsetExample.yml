apiVersion: v1
kind: Service
metadata:
  name: paigo-example-app
  labels:
    app: paigo-example-app
spec:
  ports:
    - port: 3000
      name: entry
  clusterIP: None
  selector:
    app: paigo-example-app
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: paigo-example-app-stateful
spec:
  selector:
    matchLabels:
      app: paigo-example-app # has to match .spec.template.metadata.labels
  serviceName: 'paigo-example-app'
  replicas: 1 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: paigo-example-app # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
        - name: uploads
          labels:
            uploads: 'true'
          emptyDir:
            size: 1Gi
        - name: db
          labels:
            db: 'true'
          emptyDir:
            size: 1Gi
      containers:
        - name: paigo-example-app
          image: public.ecr.aws/m6j0z5r2/paigo-starter-app:live
          ports:
            - containerPort: 3000
              name: entry
          volumeMounts:
            - name: uploads
              mountPath: /paigo-query-transform/uploads
            - name: db
              mountPath: /paigo-query-transform/db
  volumeClaimTemplates:
    - metadata:
        name: uploads
      spec:
        accessModes: ['ReadWriteOnce']
        storageClassName: 'uploads'
        selector:
          matchLabels:
            uploads: 'true'
        resources:
          requests:
            storage: 1Gi
    - metadata:
        name: db
      spec:
        accessModes: ['ReadWriteMany']
        storageClassName: 'db'
        selector:
          matchLabels:
            db: 'true'
        resources:
          requests:
            storage: 1Gi
